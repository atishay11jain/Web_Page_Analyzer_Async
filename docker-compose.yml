version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: web-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - web-analyzer-network

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: web-analyzer-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - WORKER_CONCURRENCY=2
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - web-analyzer-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_CONCURRENCY=2
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - web-analyzer-network
    deploy:
      replicas: 2

volumes:
  redis-data:
    driver: local

networks:
  web-analyzer-network:
    driver: bridge
